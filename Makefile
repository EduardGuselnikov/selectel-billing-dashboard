.PHONY: help install setup run run-once logs clean docker-build docker-up docker-down docker-logs test

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON = python3
PIP = pip3
DOCKER_COMPOSE = docker-compose

help: ## –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É
	@echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-20s\033[0m %s\n", $$1, $$2}'

install: ## –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
	$(PIP) install -r requirements.txt

setup: ## –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ (—Å–æ–∑–¥–∞–Ω–∏–µ .env —Ñ–∞–π–ª–∞)
	@if [ ! -f .env ]; then \
		cp config.env.example .env; \
		echo "–°–æ–∑–¥–∞–Ω —Ñ–∞–π–ª .env. –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ –µ–≥–æ —Å –≤–∞—à–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."; \
	else \
		echo "–§–∞–π–ª .env —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç."; \
	fi

init-db: ## –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
	$(PYTHON) init_db.py

run: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å ETL –≤ —Ä–µ–∂–∏–º–µ –¥–µ–º–æ–Ω–∞
	$(PYTHON) selectel_etl.py

run-once: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å ETL –æ–¥–∏–Ω —Ä–∞–∑
	$(PYTHON) selectel_etl.py --run-once

logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
	@if [ -f logs/selectel_etl.log ]; then \
		tail -f logs/selectel_etl.log; \
	else \
		echo "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω."; \
	fi

clean: ## –û—á–∏—Å—Ç–∏—Ç—å –ª–æ–≥–∏ –∏ –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
	rm -rf logs/*
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete

docker-build: ## –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑
	$(DOCKER_COMPOSE) build

docker-up: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–∏—Å—ã –≤ Docker
	$(DOCKER_COMPOSE) up -d
	@echo "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã. Redash: http://localhost:5000"

docker-logs: ## –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
	$(DOCKER_COMPOSE) logs -f

docker-down: ## –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker —Å–µ—Ä–≤–∏—Å—ã
	$(DOCKER_COMPOSE) down

test: ## –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç—ã
	$(PYTHON) test_etl.py

cron-setup: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å cron –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
	@echo "–î–æ–±–∞–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–æ–∫—É –≤ crontab (crontab -e):"
	@echo "0 * * * * $(shell pwd)/cron_etl.sh"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
setup-dirs:
	mkdir -p logs
	chmod +x cron_etl.sh

# –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞
install-all: setup-dirs install setup init-db ## –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ 

setup-redash: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å Redash (–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è)
	@echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redash..."
	chmod +x setup_redash.sh
	./setup_redash.sh

setup-dashboards: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –¥–∞—à–±–æ—Ä–¥—ã Redash (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç REDASH_ADMIN_EMAIL –∏ REDASH_ADMIN_PASSWORD –∏–∑ .env)
	@echo "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—à–±–æ—Ä–¥–æ–≤ Redash..."
	@if [ -f .env ]; then \
		if grep -q "REDASH_ADMIN_EMAIL=" .env && grep -q "REDASH_ADMIN_PASSWORD=" .env; then \
			echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Redash –Ω–∞–π–¥–µ–Ω—ã –≤ .env, –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."; \
			docker compose exec selectel-etl python setup_redash_dashboards.py; \
		else \
			echo "‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å REDASH_ADMIN_EMAIL –∏ REDASH_ADMIN_PASSWORD –≤ .env —Ñ–∞–π–ª–µ"; \
			echo "–ü—Ä–∏–º–µ—Ä –≤ .env:"; \
			echo "REDASH_ADMIN_EMAIL=admin@selectel.local"; \
			echo "REDASH_ADMIN_PASSWORD=admin123"; \
			exit 1; \
		fi \
	else \
		echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ."; \
		exit 1; \
	fi

setup-dashboards-only: ## –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ –¥–∞—à–±–æ—Ä–¥—ã (–±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
	@echo "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–∞—à–±–æ—Ä–¥–æ–≤ Redash (–ø—Ä–æ–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)..."
	@if [ -f .env ]; then \
		if grep -q "REDASH_ADMIN_EMAIL=" .env && grep -q "REDASH_ADMIN_PASSWORD=" .env; then \
			echo "‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Redash –Ω–∞–π–¥–µ–Ω—ã –≤ .env, –∑–∞–ø—É—Å–∫–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É..."; \
			SKIP_ADMIN_CREATION=true docker compose exec selectel-etl python setup_redash_dashboards.py; \
		else \
			echo "‚ùå –ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å REDASH_ADMIN_EMAIL –∏ REDASH_ADMIN_PASSWORD –≤ .env —Ñ–∞–π–ª–µ"; \
			exit 1; \
		fi \
	else \
		echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω."; \
		exit 1; \
	fi

docker-setup-full: docker-up setup-redash ## –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Redash
	@echo "‚úÖ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
	@echo "üåê Redash –¥–æ—Å—Ç—É–ø–µ–Ω: http://localhost:5000"
	@echo "üìä –î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –¥–∞–Ω–Ω—ã–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
	@echo "   Host: postgres, Port: 5432, Database: selectel_billing"
	@echo "   User: selectel_user, Password: selectel_password"

docker-fresh-install: docker-down docker-build docker-up setup-redash ## –ü–æ–ª–Ω–∞—è –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å –Ω—É–ª—è

docker-setup-complete: docker-up setup-redash ## –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Å –¥–∞—à–±–æ—Ä–¥–∞–º–∏ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –∏–∑ .env)
	@echo "üéØ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å –¥–∞—à–±–æ—Ä–¥–∞–º–∏..."
	@if [ -f .env ]; then \
		if grep -q "REDASH_ADMIN_EMAIL=" .env && grep -q "REDASH_ADMIN_PASSWORD=" .env; then \
			echo "‚úÖ –ù–∞–π–¥–µ–Ω—ã –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Redash –≤ .env, –∑–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫—É—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –¥–∞—à–±–æ—Ä–¥–æ–≤..."; \
			$(MAKE) setup-dashboards; \
		else \
			echo "‚ö†Ô∏è  –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞—à–±–æ—Ä–¥–æ–≤ —É–∫–∞–∂–∏—Ç–µ –≤ .env —Ñ–∞–π–ª–µ:"; \
			echo "   REDASH_ADMIN_EMAIL=admin@selectel.local"; \
			echo "   REDASH_ADMIN_PASSWORD=admin123"; \
			echo "   –ó–∞—Ç–µ–º –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: make setup-dashboards"; \
		fi \
	else \
		echo "‚ö†Ô∏è  –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ."; \
	fi
	@echo "üéâ –ü–æ–ª–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"