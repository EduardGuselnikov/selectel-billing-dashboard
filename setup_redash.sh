#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Redash
# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ —Å–æ–∑–¥–∞–µ—Ç –ø–µ—Ä–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

set -e

echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫—É Redash..."

# –ñ–¥–µ–º, –ø–æ–∫–∞ PostgreSQL –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ PostgreSQL..."
until docker compose exec postgres pg_isready -U postgres -q; do
    echo "   PostgreSQL –µ—â–µ –Ω–µ –≥–æ—Ç–æ–≤, –∂–¥–µ–º..."
    sleep 2
done
echo "‚úÖ PostgreSQL –≥–æ—Ç–æ–≤"

# –ñ–¥–µ–º, –ø–æ–∫–∞ Redash —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ Redash —Å–µ—Ä–≤–µ—Ä–∞..."
max_attempts=30
attempt=0
while [ $attempt -lt $max_attempts ]; do
    if docker compose exec redash-server curl -f http://localhost:5000/ping > /dev/null 2>&1; then
        echo "‚úÖ Redash —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω"
        break
    fi
    attempt=$((attempt + 1))
    echo "   –ü–æ–ø—ã—Ç–∫–∞ $attempt/$max_attempts..."
    sleep 5
done

if [ $attempt -eq $max_attempts ]; then
    echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–ø—É—Å–∫–∞ Redash —Å–µ—Ä–≤–µ—Ä–∞"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Redash
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Redash..."
table_count=$(docker compose exec postgres psql -U redash -d redash -t -c "SELECT count(*) FROM information_schema.tables WHERE table_schema = 'public';" 2>/dev/null | tr -d ' ')

if [ "$table_count" -eq "0" ] || [ -z "$table_count" ]; then
    echo "üìä –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö Redash..."
    docker compose exec redash-server /app/bin/docker-entrypoint create_db
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Redash –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞"
    
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã Redash –ø–æ—Å–ª–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã Redash..."
    docker compose restart redash-server redash-worker redash-scheduler
    
    # –ñ–¥–µ–º –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    sleep 10
    echo "‚úÖ –°–µ—Ä–≤–∏—Å—ã Redash –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã"
else
    echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Redash —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ ($table_count —Ç–∞–±–ª–∏—Ü)"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
echo "üë§ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π..."
user_count=$(docker compose exec postgres psql -U redash -d redash -t -c "SELECT count(*) FROM users;" 2>/dev/null | tr -d ' ' || echo "0")

if [ "$user_count" -eq "0" ] || [ -z "$user_count" ]; then
    echo "üë§ –°–æ–∑–¥–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞..."
    
    # –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ API setup
    echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É:"
    echo "   http://localhost:5000/setup"
    echo ""
    echo "üìù –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:"
    echo "   Email: admin@selectel.local"
    echo "   Password: admin123"
    echo "   Organization: Selectel Billing"
    echo ""
    echo "üí° –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–æ–±–∞–≤—å—Ç–µ –∏—Å—Ç–æ—á–Ω–∏–∫ –¥–∞–Ω–Ω—ã—Ö PostgreSQL:"
    echo "   Host: postgres"
    echo "   Port: 5432"
    echo "   User: selectel_user"
    echo "   Password: selectel_password"
    echo "   Database: selectel_billing"
else
    echo "‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç ($user_count –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)"
fi

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Redash –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üåê Redash –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:5000"
echo "üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö selectel_billing –≥–æ—Ç–æ–≤–∞ –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
echo ""
echo "üöÄ –î–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞—à–±–æ—Ä–¥–æ–≤:"
echo "   1. –£–∫–∞–∂–∏—Ç–µ –≤ .env —Ñ–∞–π–ª–µ: REDASH_ADMIN_EMAIL –∏ REDASH_ADMIN_PASSWORD"
echo "   2. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: make setup-dashboards"
echo ""
